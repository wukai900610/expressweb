extends layout

block content
    style.
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            padding:20px;
            font: 13px Helvetica, Arial;
        }
        
        .chatWin{
            position:relative;
        }

        .history {
            list-style-type: none;
            margin: 0;
            padding: 10px 10px 50px 10px;
        }

        .history li {
            padding: 5px 10px;
        }
        
        .history li .username{
            font-weight:bold;
        }
        
        .history li img{
            //- max-width:50%;
            max-height:150px;
            border:1px solid #ccc;
        }

        .history li:nth-child(odd) {
            background: #eee;
        }
    <div class="chatWin" id="vue-app">
        <ul class="history">
            <li v-for="(item,index) in history" :key="index">
                <span>[{{new Date(item.time).format('yyyy/MM/dd hh:mm:ss')}}]</span>
                <span class="username">{{item.name}}</span>
                <div v-html="item.msg"></div>
            </li>
        </ul>
        
        <div class="sendBox">
            <div class="sendAction">
                <div id="editor"></div>
                <el-button type="primary" @click="sendMsg">发送</el-button>
            </div>
        </div>
        
        <el-dialog title="请输入您的昵称" :visible.sync="dialogVisible" width="30%">
            <span>
                <el-input v-model="myName" placeholder="请输入内容"></el-input>
            </span>
            <span slot="footer" class="dialog-footer">
                <el-button @click="dialogVisible = false">取 消</el-button>
                <el-button type="primary" @click="confirm">确 定</el-button>
            </span>
        </el-dialog>
    </div>
    script(src='https://cdn.bootcdn.net/ajax/libs/vue/2.6.11/vue.min.js')
    //- script(src='https://cdn.polyfill.io/v2/polyfill.min.js')
    script(src='https://unpkg.com/element-ui/lib/index.js')
    script(src='https://unpkg.com/wangeditor/release/wangEditor.min.js')
    link(href="https://unpkg.com/element-ui/lib/theme-chalk/index.css" rel="stylesheet")
    script(src='https://cdn.bootcdn.net/ajax/libs/axios/0.19.2/axios.min.js')
    script(src='/socket.io/socket.io.js')
    script.
        Date.prototype.format = function(fmt) {
            var o = {
                "M+": this.getMonth() + 1, //月份
                "d+": this.getDate(), //日
                "h+": this.getHours(), //小时
                "m+": this.getMinutes(), //分
                "s+": this.getSeconds(), //秒
                "q+": Math.floor((this.getMonth() + 3) / 3), //季度
                "S": this.getMilliseconds() //毫秒
            };
            if (/(y+)/.test(fmt)) {
                fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
            }
            for (var k in o) {
                if (new RegExp("(" + k + ")").test(fmt)) {
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
                }
            }
            return fmt;
        }
        var socket = io();
        
        var E = window.wangEditor;
        var editor = new E('#editor');
        editor.customConfig.uploadFileName = 'uploadFile'
        editor.customConfig.uploadImgServer = '/apis/upFile';
        editor.customConfig.menus = [
            'head',  // 标题
            'bold',  // 粗体
            'fontSize',  // 字号
            'fontName',  // 字体
            'italic',  // 斜体
            'underline',  // 下划线
            'strikeThrough',  // 删除线
            'foreColor',  // 文字颜色
            'backColor',  // 背景颜色
            'link',  // 插入链接
            'list',  // 列表
            'justify',  // 对齐方式
            'quote',  // 引用
            'emoticon',  // 表情
            'image',  // 插入图片
            'table',  // 表格
        ]
        editor.customConfig.zIndex = 100
        
        new Vue({
            el: "#vue-app",
            data() {
                var nickName = window.JSON.parse(window.sessionStorage.getItem('nickName')) || '';
                return {
                    dialogVisible:nickName && false,
                    myName:nickName,
                    msg:'',
                    history:[]
                }
            },
            methods: {
                addLine(data){
                    this.history.push(data);
                },
                sendMsg(){
                    var _this = this;
                    
                    _this.msg = editor.txt.html();
            
                    socket.emit("message", {
                        msg: _this.msg,
                        name: _this.myName
                    });
                    
                    //- 清空编辑器
                    editor.txt.html('');
                },
                getHistory(){
                    var _this = this;
                    // 获取历史消息
                    axios.get('/chat/history/get')
                        .then(function(res) {
                            _this.history = _this.history.concat(res.data)
                            
                            setTimeout(function () {
                                //发送昵称给后端
                                socket.emit("join", _this.myName);
                            }, 0);
                        })
                            
                    this.dialogVisible = false;
                },
                confirm(){
                    if(this.myName){
                        window.sessionStorage.setItem('nickName', window.JSON.stringify(this.myName));
                        
                        this.getHistory();
                    }
                }
            },
            mounted() {
                var _this = this;
                
                document.title = '吐槽';
                
                if(this.myName){
                    this.getHistory();
                }
                
                editor.create();
            
                //当前端收到服务器发来的join事件时
                socket.on("join", function(user) {
                    if(user && user != undefined){
                        _this.addLine({
                            name:user,
                            msg:'加入了群聊',
                            time:new Date().getTime()
                        })
                    }
                });
            
                // 其他端用来接收消息的方法
                socket.on("message", function(data) {
                    _this.addLine(data)
                });
            }
        })
